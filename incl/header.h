/* ************************************************************************** */
/*                                                                            */
/*                                                        ::::::::            */
/*   header.h                                           :+:    :+:            */
/*                                                     +:+                    */
/*   By: tbruinem <tbruinem@student.codam.nl>         +#+                     */
/*                                                   +#+                      */
/*   Created: 2021/04/28 16:43:52 by tbruinem      #+#    #+#                 */
/*   Updated: 2021/04/28 17:24:28 by tbruinem      ########   odam.nl         */
/*                                                                            */
/* ************************************************************************** */

#ifndef HEADER_H
# define HEADER_H

#include <stddef.h>

//TODO - split this into flags for SORT, FORMAT, FILTER, INFO

//SORT - settings related to enabling/disabling sorting and changing what to sort on
//FORMAT - settings related to the display of the file entries
//FILTER - settings related to which entries to filter out
//INFO - settings related to the information displayed for each file

# define FLAG_EXTENDED						0b0000000000000000000000000000000000000000000000000000000000000001 // -@
# define FLAG_ONE							0b0000000000000000000000000000000000000000000000000000000000000010 // -1
# define FLAG_OMIT_NAV						0b0000000000000000000000000000000000000000000000000000000000000100 // -A : . and .. are not included
# define FLAG_INCLUDE_DOT					0b0000000000000000000000000000000000000000000000000000000000001000 // -a
# define FLAG_FORCE_NONPRINTABLE			0b0000000000000000000000000000000000000000000000000000000000010000 // -B
# define FLAG_ESCAPE_NONPRINTABLE			0b0000000000000000000000000000000000000000000000000000000000100000 // -b
# define FLAG_MULTI_COLUMN					0b0000000000000000000000000000000000000000000000000000000001000000 // -C
# define FLAG_SORT_LASTMODIFIED				0b0000000000000000000000000000000000000000000000000000000010000000 // -c
# define FLAG_NO_RECURSION					0b0000000000000000000000000000000000000000000000000100000100000000 // -d
# define FLAG_INCLUDE_ACL					0b0000000000000000000000000000000000000000000000000000001000000000 // -e
# define FLAG_VISUALAID						0b0000000000000000000000000000000000000000000000000100010000000000 // -F
# define FLAG_SORT_DISABLE					0b0000000000000000000000000000000000000000000000000000100000001000 // -f
# define FLAG_COLORIZED						0b0000000000000000000000000000000000000000000000000001000000000000 // -G
# define FLAG_GROUP							0b0000000000000000000000000000000000000000000000000010000000000000 // -g
# define FLAG_NO_SYMBOL_EXPANSION			0b0000000000000000000000000000000000000000000000000100000000000000 // turned on by -F, -d or -l
# define FLAG_UNIT_SUFFIX_LIST				0b0000000000000000000000000000000000000000000000001000000000000000 // -h only useful in combination with -l
# define FLAG_INODE_NUMBER					0b0000000000000000000000000000000000000000000000010000000000000000 // -i
# define FLAG_USE_KILOBYTES					0b0000000000000000000000000000000000000000000000100000000000000000 // -k
# define FLAG_FOLLOW_SYMBOL_FULL			0b0000000000000000000000000000000000000000000001000000000000000000 // -L
# define FLAG_FORMAT_LONG					0b0000000000000000000000000000000000000000000010001000000000000000 // -l
# define FLAG_FORMAT_STREAM					0b0000000000000000000000000000000000000000000100000000000000000000 // -m
# define FLAG_NUMERIC_ID					0b0000000000000000000000000000000000000000001010000000000000000000 // -n
# define FLAG_INCLUDE_FILEFLAGS				0b0000000000000000000000000000000000000000010000000000000000000000 // -O
# define FLAG_OMIT_GROUP_ID					0b0000000000000000000000000000000000000000100010000000000000000000 // -o

typedef struct	s_flags
{
	size_t		flags;
}				t_flags;

typedef struct	s_data
{


}				t_data;

# endif
